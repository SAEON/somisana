name: deploy_geoserver@stable

on: workflow_dispatch

env:
  REGISTRY: ghcr.io
  IMAGE: kartoza/geoserver:2.20.4
  BRANCH_REF: stable
  DEPLOY_SOURCE: deploy/geoserver/stack.yml
  STACK_COMPOSE_PATH: /home/runner/somisana/deploy/geoserver/stack.yml
  STACK_CONFIG_PATH: /home/runner/somisana/deploy/geoserver/stack.env
  GEOSERVER_ADMIN_USER: ${{ secrets.GEOSERVER_USERNAME }}
  GEOSERVER_ADMIN_PASSWORD: ${{ secrets.GEOSERVER_PASSWORD }}
  PG_HOST: ${{ secrets.PG_HOST }}
  PG_PORT: ${{ secrets.PG_PORT_STABLE }}
  PG_DB: ${{ secrets.PG_DB_STABLE }}
  PG_USERNAME: ${{ secrets.PG_USERNAME_STABLE }}
  PG_PASSWORD: ${{ secrets.PG_PASSWORD_STABLE }}

jobs:
  deploy:
    runs-on: github-runner.saeon.int
    steps:
      - name: Check out source code (shared)
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}
      - name: (SCP) Copy stack configuration to app server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.ULWAPPSWARM01_HOSTNAME }}
          username: ${{ secrets.ULWAPPSWARM01_HOST_USERNAME }}
          password: ${{ secrets.ULWAPPSWARM01_HOST_PASSWORD }}
          port: ${{ secrets.ULWAPPSWARM01_HOST_SSH_PORT }}
          source: ${{ env.DEPLOY_SOURCE }}
          target: 'somisana'
      - name: (SSH) Deploy stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.ULWAPPSWARM01_HOSTNAME }}
          username: ${{ secrets.ULWAPPSWARM01_HOST_USERNAME }}
          password: ${{ secrets.ULWAPPSWARM01_HOST_PASSWORD }}
          port: ${{ secrets.ULWAPPSWARM01_HOST_SSH_PORT }}
          script: |
            echo "IMAGE=${{ env.IMAGE }}" > ${{ env.STACK_CONFIG_PATH }}
            echo "GEOSERVER_ADMIN_USER=${{ env.GEOSERVER_ADMIN_USER }}" >> ${{ env.STACK_CONFIG_PATH }}
            echo "GEOSERVER_ADMIN_PASSWORD=${{ env.GEOSERVER_ADMIN_PASSWORD }}" >> ${{ env.STACK_CONFIG_PATH }}
            echo "PG_HOST=${{ env.PG_HOST }}" >> ${{ env.STACK_CONFIG_PATH }}
            echo "PG_PORT=${{ env.PG_PORT }}" >> ${{ env.STACK_CONFIG_PATH }}
            echo "PG_DB=${{ env.PG_DB }}" >> ${{ env.STACK_CONFIG_PATH }}
            echo "PG_USERNAME=${{ env.PG_USERNAME }}" >> ${{ env.STACK_CONFIG_PATH }}
            echo "PG_PASSWORD=${{ env.PG_PASSWORD }}" >> ${{ env.STACK_CONFIG_PATH }}
            sudo /opt/deploy-docker-stack.sh ${{ env.STACK_COMPOSE_PATH }} ${{ env.STACK_CONFIG_PATH }} geoserver
