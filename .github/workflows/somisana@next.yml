name: somisana@next

on:
  push:
    branches:
      - next

env:
  BRANCH_REF: next
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}_python-scripts
  PG_HOST: ${{ secrets.PG_HOST }}
  PG_PORT: ${{ secrets.PG_PORT_NEXT }}
  PG_DB: ${{ secrets.PG_DB_NEXT }}
  PG_USERNAME: ${{ secrets.PG_USERNAME_NEXT }}
  PG_PASSWORD: ${{ secrets.PG_PASSWORD_NEXT }}
  MONGO_HOST: ${{ secrets.MONGO_HOST_NEXT }}
  MONGO_DB: ${{ secrets.MONGO_DB_NEXT }}
  MONGO_USERNAME: ${{ secrets.MONGO_USERNAME_NEXT }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD_NEXT }}

jobs:
  build-python-scripts:
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.meta.outputs.tags }}
    steps:
      - name: Check out source code (shared)
        uses: actions/checkout@v2
        with:
          ref: ${{ env.BRANCH_REF }}

      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: docker/python-scripts/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  test-matlab:
    runs-on: github-runner.saeon.int
    steps:
      - name: Test matlab
        run: >-
          docker run \
            --rm \
            --mac-address 02:42:ff:ff:ff:ff \
            -v /opt/licenses/matlab-r2022a/license.lic:/licenses/license.lic \
            -e MLM_LICENSE_FILE=/licenses/license.lic \
            mathworks/matlab:r2022a \
              -batch rand

  post-processing:
    needs: [build-python-scripts]
    runs-on: github-runner.saeon.int
    steps:
      - name: Algoa Bay forecast (post processing)
        run: >-
          docker run \
            --rm \
            -e PG_HOST=${{ env.PG_HOST }} \
            -e PG_PORT=${{ env.PG_PORT }} \
            -e PG_DB=${{ env.PG_DB }} \
            -e PG_USERNAME=${{ env.PG_USERNAME }} \
            -e PG_PASSWORD=${{ env.PG_PASSWORD }} \
            -e MONGO_HOST=${{ env.MONGO_HOST }} \
            -e MONGO_DB=${{ env.MONGO_DB }} \
            -e MONGO_USERNAME=${{ env.MONGO_USERNAME }} \
            -e MONGO_PASSWORD=${{ env.MONGO_PASSWORD }} \
            -e SCRIPT_NAME=popr_algoa-bay-forecast \
            ${{ needs.build-python-scripts.outputs.image }}