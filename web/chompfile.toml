version = 0.1
default-task = 'start'

extensions = ['chomp@0.1:prettier']

[[task]]
name = 'start'
env = { TZ='UTC', NODE_LOADER_CONFIG='loaders/config.js' }
serial = true
deps = [
  'client',
  'rollup:server',
  'node.importmap'
]
run = """
node \
  --trace-warnings \
  --loader @node-loader/core \
  server
"""

[[task]]
name = 'client'
serial = true
deps = [
  '.cache',
  '.cache/*.html',
  'copy-static-files',
]

[[task]]
name = 'copy-static-files'
run = '''
cp -r public/* .cache/
'''

[[task]]
name = 'rollup:server'
deps = ['prettier:server']
run = 'rollup -c rollup/server.config.js'

[[task]]
name = 'jspm:node'
targets = ['node.importmap']
deps = [
    'index.importmap.js',
    '.cache'
]
invalidation = 'always'
run = "node jspm-node.js"

[[task]]
name = 'jspm:client'
targets = ['.cache/#.html']
deps = [
    'client/html/#.html',
    '.cache'
]
invalidation = 'always'
run = "node jspm-client.js"

[[task]]
name = "rollup:client"
target = '.cache'
deps = ['prettier:client']
run = 'rollup --config rollup/client.config.js'

[[task]]
name = 'prettier'
deps = ['prettier:server', 'prettier:client', 'prettier:other']

[[task]]
name = 'prettier:client'
deps = [
  'client/**/*',
  'common/**/*'
]
template = 'prettier'
[task.template-options]
ignore-path = '../.prettierignore'
loglevel = 'warn'
files = 'client/**/*.@(js|jsx|json|mjs|cjs|graphql|yml|ts|tsx) common/**/*.@(js|jsx|json|mjs|cjs|graphql|yml|ts|tsx)'

[[task]]
name = 'prettier:server'
deps = [
  'server/**/*',
  'loaders/**/*',
  'ssr/**/*'
]
template = 'prettier'
[task.template-options]
ignore-path = '../.prettierignore'
loglevel = 'warn'
files = 'loaders/**/*.js server/**/*.@(js|json|geojson|cjs|mjs|graphql) ssr/**/*.@(js|json|geojson|cjs|mjs|graphql|ts|tsx|jsx)'

[[task]]
name = 'prettier:other'
template = 'prettier'
[task.template-options]
ignore-path = '../.prettierignore'
loglevel = 'warn'
files = 'rollup/**/*.js ./*.@(js|jsx|json|mjs|cjs|graphql|yml|ts|tsx)'

[[task]]
name = 'clear-cache'
run = '''
rimraf node.importmap
rimraf .cache
rimraf .ssr
'''

[[task]]
name = 'reset'
run = """
rm -rf node_modules
find . \
  -name node_modules \
  -type d \
  -exec rm -rv {} + \
    && find . \
      -name package-lock.json \
      -type f \
      -delete
"""

############################# 
#############################
#############################

[[task]]
name = 'build:deployment'
deps = [
  'clear-cache',
  'rollup:client',
  'rollup:server',
  'jspm:client',
  'jspm:node',
  'copy-static-files'
]
serial = true